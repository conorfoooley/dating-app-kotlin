#
# Created by Andrii Kovalchuk
# Copyright (C) 2021. roove
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see https://www.gnu.org/licenses
#

## For more details on how to configure your build environment visit
# http://www.gradle.org/docs/current/userguide/build_environment.html
#
# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
# Default value: -Xmx1024m -XX:MaxPermSize=256m
# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
#
# When configured, Gradle will run in incubating parallel mode.
# This option should only be used with decoupled projects. More details, visit
# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
#Thu Oct 03 14:01:31 EEST 2019

org.gradle.parallel=true
# The setting is particularly useful for tweaking memory settings.
org.gradle.jvmargs = -Xmx2048m -XX:+UseParallelGC
# Gradle will reuse task outputs from any previous build, when possible, resulting in much faster builds
org.gradle.caching = true
# Enables incubating configuration on demand, where Gradle will attempt to configure only necessary projects.
org.gradle.configureondemand = true
# Daemon keeps the instance of the Gradle up and running in the background even after your build finishes
org.gradle.daemon = true
org.gradle.unsafe.watch-fs = true

android.useAndroidX = true
# Kotlin code style for this project: "official" or "obsolete":
kotlin.code.style = official
kapt.use.worker.api = true
kapt.incremental.apt = true
room.incremental = true
