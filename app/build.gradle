/*
 * Created by Andrii Kovalchuk
 * Copyright (C) 2020. roove
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see https://www.gnu.org/licenses
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.gms.google-services'


android {

	def globalConfiguration = rootProject.extensions.getByName("ext")
	compileSdkVersion globalConfiguration["androidCompileSdkVersion"]


	defaultConfig {
		applicationId "com.mmdev.roove"
		minSdkVersion globalConfiguration["androidMinSdkVersion"]
		targetSdkVersion globalConfiguration["androidTargetSdkVersion"]
		versionCode globalConfiguration["androidVersionCode"]
		versionName globalConfiguration["androidVersionName"]
		//testInstrumentationRunner globalConfiguration["testInstrumentationRunner"]
	}

	buildTypes {
		debug {
			versionNameSuffix '-DEBUG'
		}

		release {
			lintOptions {
				checkReleaseBuilds true
				abortOnError true
			}
			minifyEnabled true
			shrinkResources true
			proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
		}
	}

	compileOptions {
		sourceCompatibility = JavaVersion.VERSION_1_8
		targetCompatibility = JavaVersion.VERSION_1_8
	}

	kotlinOptions {
		jvmTarget = JavaVersion.VERSION_1_8
	}

	buildFeatures {
		dataBinding = true
	}

	kapt {
		arguments {
			arg("databinding.incremental", "true")
		}
	}

	sourceSets {
		main.java.srcDirs += 'src/main/kotlin'
	}

}

dependencies {

	implementation fileTree(dir: 'libs', include: ['*.jar'])
	implementation project(':business')
	implementation project(':data')

	//core
	implementation 'androidx.core:core-ktx:1.5.0-alpha05'
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
	implementation 'androidx.constraintlayout:constraintlayout:2.1.0-alpha2'
	implementation 'com.google.android.material:material:1.3.0-beta01'

	//custom UI
	implementation 'com.yuyakaido.android:card-stack-view:2.3.4'
	implementation 'org.florescu.android.rangeseekbar:rangeseekbar-library:0.4.0'
	implementation 'com.github.chrisbanes:PhotoView:2.3.0'

	//firebase
	implementation platform('com.google.firebase:firebase-bom:26.2.0')
	implementation 'com.google.firebase:firebase-auth-ktx'
	implementation 'com.google.firebase:firebase-firestore-ktx'
	implementation 'com.google.firebase:firebase-storage-ktx'
	implementation 'com.google.firebase:firebase-crashlytics-ktx'
	implementation 'com.google.firebase:firebase-analytics-ktx'
	implementation 'com.google.firebase:firebase-messaging-ktx'


	//facebook auth
	implementation libs.facebookLogin

	//glide
	implementation 'com.github.bumptech.glide:glide:4.11.0'
	kapt 'com.github.bumptech.glide:compiler:4.11.0'
	implementation('com.github.bumptech.glide:okhttp3-integration:4.11.0') {
		exclude group: 'glide-parent'
	}

	// Dagger
	implementation libs.dagger
	kapt libs.daggerCompiler

	// Navigation component
	implementation "androidx.navigation:navigation-ui-ktx:2.3.2"
	implementation "androidx.navigation:navigation-fragment-ktx:2.3.2"

	// RxJava
	implementation libs.rxJava

	// RxAndroid
	implementation libs.rxAndroid


	// ViewModel and LiveData
	implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"

	//binary prefs
	implementation "com.github.yandextaxitech:binaryprefs:1.0.1"


}
